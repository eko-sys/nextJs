{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nvar _require = require(\"react\"),\n    Component = _require.Component;\n\nimport Main from '../../layouts/Dashboard/Main';\n\nvar CKEditor = require('@ckeditor/ckeditor5-react');\n\nvar ClassicEditor = require('@ckeditor/ckeditor5-build-classic');\n\nvar AdminView = /*#__PURE__*/function (_Component) {\n  _inherits(AdminView, _Component);\n\n  var _super = _createSuper(AdminView);\n\n  function AdminView(props) {\n    _classCallCheck(this, AdminView);\n\n    return _super.call(this, props);\n  }\n\n  _createClass(AdminView, [{\n    key: \"render\",\n    value: function render() {\n      return __jsx(\"div\", null, __jsx(Main, {\n        token: this.props.token\n      }, __jsx(\"div\", {\n        className: \"App\"\n      }, __jsx(\"h2\", null, \"CKEditor 5 using a custom build - DecoupledEditor\"), __jsx(CKEditor, {\n        onInit: function onInit(editor) {\n          console.log('Editor is ready to use!', editor); // Insert the toolbar before the editable area.\n\n          editor.ui.getEditableElement().parentElement.insertBefore(editor.ui.view.toolbar.element, editor.ui.getEditableElement());\n        },\n        onChange: function onChange(event, editor) {\n          return console.log({\n            event: event,\n            editor: editor\n          });\n        },\n        editor: DecoupledEditor,\n        data: \"<p>Hello from CKEditor 5's DecoupledEditor!</p>\"\n      }))));\n    }\n  }]);\n\n  return AdminView;\n}(Component);\n\nexport default AdminView;","map":{"version":3,"sources":["C:/Users/Administrator/Documents/nodejs/nextExpress/component/views/dashboard/adminView.js"],"names":["require","Component","Main","CKEditor","ClassicEditor","AdminView","props","token","editor","console","log","ui","getEditableElement","parentElement","insertBefore","view","toolbar","element","event","DecoupledEditor"],"mappings":";;;;;;;;;;;;eAAsBA,OAAO,CAAC,OAAD,C;IAArBC,S,YAAAA,S;;AACR,OAAOC,IAAP,MAAiB,8BAAjB;;AACA,IAAMC,QAAQ,GAAGH,OAAO,CAAC,2BAAD,CAAxB;;AACA,IAAMI,aAAa,GAAGJ,OAAO,CAAC,mCAAD,CAA7B;;IAEMK,S;;;;;AAEF,qBAAYC,KAAZ,EAAkB;AAAA;;AAAA,6BACRA,KADQ;AAEjB;;;;6BAEO;AACJ,aACI,mBACI,MAAC,IAAD;AAAM,QAAA,KAAK,EAAE,KAAKA,KAAL,CAAWC;AAAxB,SACA;AAAK,QAAA,SAAS,EAAC;AAAf,SACA,sEADA,EAEA,MAAC,QAAD;AACI,QAAA,MAAM,EAAG,gBAAAC,MAAM,EAAI;AACfC,UAAAA,OAAO,CAACC,GAAR,CAAa,yBAAb,EAAwCF,MAAxC,EADe,CAGf;;AACAA,UAAAA,MAAM,CAACG,EAAP,CAAUC,kBAAV,GAA+BC,aAA/B,CAA6CC,YAA7C,CACIN,MAAM,CAACG,EAAP,CAAUI,IAAV,CAAeC,OAAf,CAAuBC,OAD3B,EAEIT,MAAM,CAACG,EAAP,CAAUC,kBAAV,EAFJ;AAIH,SATL;AAUI,QAAA,QAAQ,EAAG,kBAAEM,KAAF,EAASV,MAAT;AAAA,iBAAqBC,OAAO,CAACC,GAAR,CAAa;AAAEQ,YAAAA,KAAK,EAALA,KAAF;AAASV,YAAAA,MAAM,EAANA;AAAT,WAAb,CAArB;AAAA,SAVf;AAWI,QAAA,MAAM,EAAGW,eAXb;AAYI,QAAA,IAAI,EAAC;AAZT,QAFA,CADA,CADJ,CADJ;AAuBH;;;;EA9BmBlB,S;;AAkCxB,eAAeI,SAAf","sourcesContent":["const { Component } = require(\"react\");\r\nimport Main from '../../layouts/Dashboard/Main';\r\nconst CKEditor = require('@ckeditor/ckeditor5-react');\r\nconst ClassicEditor = require('@ckeditor/ckeditor5-build-classic')\r\n\r\nclass AdminView extends Component {\r\n\r\n    constructor(props){\r\n        super(props)\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div>\r\n                <Main token={this.props.token}>\r\n                <div className=\"App\">\r\n                <h2>CKEditor 5 using a custom build - DecoupledEditor</h2>\r\n                <CKEditor\r\n                    onInit={ editor => {\r\n                        console.log( 'Editor is ready to use!', editor );\r\n\r\n                        // Insert the toolbar before the editable area.\r\n                        editor.ui.getEditableElement().parentElement.insertBefore(\r\n                            editor.ui.view.toolbar.element,\r\n                            editor.ui.getEditableElement()\r\n                        );\r\n                    } }\r\n                    onChange={ ( event, editor ) => console.log( { event, editor } ) }\r\n                    editor={ DecoupledEditor }\r\n                    data=\"<p>Hello from CKEditor 5's DecoupledEditor!</p>\"\r\n                />\r\n                </div>\r\n                </Main>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default AdminView"]},"metadata":{},"sourceType":"module"}